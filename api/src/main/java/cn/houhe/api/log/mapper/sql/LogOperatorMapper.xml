<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.houhe.api.log.mapper.LogOperatorMapper" >
	<!-- 实体类 - 数据库映射 2017-04-10 11:10:03. -->
	<resultMap id="BaseResultMap" type="cn.houhe.api.log.entity.LogOperator" >
		<id column="loid" property="loid" jdbcType="INTEGER" />
		<result column="operator" property="operator" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="TINYINT" />
		<result column="table_name" property="tableName" jdbcType="VARCHAR" />
		<result column="context" property="context" jdbcType="VARCHAR" />
		<result column="createdon" property="createdon" jdbcType="TIMESTAMP" />
	</resultMap>

	<!-- 用于 SELECT 语句的所有字段  2017-04-10 11:10:03. -->
	<sql id="Base_Column_List" >
		loid, operator, type, table_name, context, createdon
	</sql>

	<!-- 按主键查询 2017-04-10 11:10:03. -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
		select 
		<include refid="Base_Column_List" />
		from log_operator
		where loid = #{loid,jdbcType=INTEGER}
	</select>

	<!-- 按主键删除 2017-04-10 11:10:03. -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
		delete from log_operator
		where loid = #{loid,jdbcType=INTEGER}
	</delete>

	<!-- 插入 - 全字段保存 2017-04-10 11:10:03. -->
	<insert id="insert" parameterType="cn.houhe.api.log.entity.LogOperator" >
		<selectKey resultType="java.lang.Integer" keyProperty="loid" order="AFTER" >
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into log_operator (operator, type, table_name, 
			context, createdon)
		values (#{operator,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{tableName,jdbcType=VARCHAR}, 
			#{context,jdbcType=VARCHAR}, #{createdon,jdbcType=TIMESTAMP})
	</insert>

	<!-- 插入 - 仅保存给定实体类中非null的字段 2017-04-10 11:10:03. -->
	<insert id="insertSelective" parameterType="cn.houhe.api.log.entity.LogOperator" >
		<selectKey resultType="java.lang.Integer" keyProperty="loid" order="AFTER" >
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into log_operator
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="operator != null" >
				operator,
			</if>
			<if test="type != null" >
				type,
			</if>
			<if test="tableName != null" >
				table_name,
			</if>
			<if test="context != null" >
				context,
			</if>
			<if test="createdon != null" >
				createdon,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="operator != null" >
				#{operator,jdbcType=VARCHAR},
			</if>
			<if test="type != null" >
				#{type,jdbcType=TINYINT},
			</if>
			<if test="tableName != null" >
				#{tableName,jdbcType=VARCHAR},
			</if>
			<if test="context != null" >
				#{context,jdbcType=VARCHAR},
			</if>
			<if test="createdon != null" >
				#{createdon,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>

	<!-- 按主键更新 - 仅更新给定实体类中非null的字段 2017-04-10 11:10:03. -->
	<update id="updateByPrimaryKeySelective" parameterType="cn.houhe.api.log.entity.LogOperator" >
		update log_operator
		<set >
			<if test="operator != null" >
				operator = #{operator,jdbcType=VARCHAR},
			</if>
			<if test="type != null" >
				type = #{type,jdbcType=TINYINT},
			</if>
			<if test="tableName != null" >
				table_name = #{tableName,jdbcType=VARCHAR},
			</if>
			<if test="context != null" >
				context = #{context,jdbcType=VARCHAR},
			</if>
			<if test="createdon != null" >
				createdon = #{createdon,jdbcType=TIMESTAMP},
			</if>
		</set>
		where loid = #{loid,jdbcType=INTEGER}
	</update>

	<!-- 按主键更新 - 全更新 2017-04-10 11:10:03. -->
	<update id="updateByPrimaryKey" parameterType="cn.houhe.api.log.entity.LogOperator" >
		update log_operator
		set operator = #{operator,jdbcType=VARCHAR},
			type = #{type,jdbcType=TINYINT},
			table_name = #{tableName,jdbcType=VARCHAR},
			context = #{context,jdbcType=VARCHAR},
			createdon = #{createdon,jdbcType=TIMESTAMP}
		where loid = #{loid,jdbcType=INTEGER}
	</update>

	<!-- 按 Criteria 条件查询, 支持分页 2017-04-10 11:10:03. -->
	<select id="selectByCriteria" resultMap="BaseResultMap" parameterType="Criteria" >
		select
		<include refid="Base_Column_List" />
		from log_operator
		<where >
			<include refid="Criteria.Filter" />
		</where>
		<include refid="Criteria.Order" />
	</select>

</mapper>