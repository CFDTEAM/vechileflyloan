<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.houhe.api.loan.mapper.AuthorizeInfoMapper" >
	<!-- 实体类 - 数据库映射 2017-04-20 16:50:02. -->
	<resultMap id="BaseResultMap" type="cn.houhe.api.loan.entity.AuthorizeInfo" >
		<id column="ai_id" property="aiId" jdbcType="INTEGER" />
		<result column="member_id" property="memberId" jdbcType="INTEGER" />
		<result column="aliy_authorize_time" property="aliyAuthorizeTime" jdbcType="TIMESTAMP" />
		<result column="credit_authorize_time" property="creditAuthorizeTime" jdbcType="TIMESTAMP" />
		<result column="opertate_authorize_time" property="opertateAuthorizeTime" jdbcType="TIMESTAMP" />
		<result column="is_aliy_authorize" property="isAliyAuthorize" jdbcType="TINYINT" />
		<result column="is_operate_authorize" property="isOperateAuthorize" jdbcType="TINYINT" />
		<result column="is_credit_authorize" property="isCreditAuthorize" jdbcType="TINYINT" />
		<result column="createdon" property="createdon" jdbcType="TIMESTAMP" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
	</resultMap>

	<!-- 用于 SELECT 语句的所有字段  2017-04-20 16:50:02. -->
	<sql id="Base_Column_List" >
		ai_id, member_id, aliy_authorize_time, credit_authorize_time, opertate_authorize_time, 
		is_aliy_authorize, is_operate_authorize, is_credit_authorize, createdon, remark
	</sql>

	<!-- 按主键查询 2017-04-20 16:50:02. -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
		select 
		<include refid="Base_Column_List" />
		from authorize_info
		where ai_id = #{aiId,jdbcType=INTEGER}
	</select>

	<!-- 按主键删除 2017-04-20 16:50:02. -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
		delete from authorize_info
		where ai_id = #{aiId,jdbcType=INTEGER}
	</delete>

	<!-- 插入 - 全字段保存 2017-04-20 16:50:02. -->
	<insert id="insert" parameterType="cn.houhe.api.loan.entity.AuthorizeInfo" >
		<selectKey resultType="java.lang.Integer" keyProperty="aiId" order="AFTER" >
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into authorize_info (member_id, aliy_authorize_time, credit_authorize_time, 
			opertate_authorize_time, is_aliy_authorize, 
			is_operate_authorize, is_credit_authorize, createdon, 
			remark)
		values (#{memberId,jdbcType=INTEGER}, #{aliyAuthorizeTime,jdbcType=TIMESTAMP}, #{creditAuthorizeTime,jdbcType=TIMESTAMP}, 
			#{opertateAuthorizeTime,jdbcType=TIMESTAMP}, #{isAliyAuthorize,jdbcType=TINYINT}, 
			#{isOperateAuthorize,jdbcType=TINYINT}, #{isCreditAuthorize,jdbcType=TINYINT}, #{createdon,jdbcType=TIMESTAMP}, 
			#{remark,jdbcType=VARCHAR})
	</insert>

	<!-- 插入 - 仅保存给定实体类中非null的字段 2017-04-20 16:50:02. -->
	<insert id="insertSelective" parameterType="cn.houhe.api.loan.entity.AuthorizeInfo" >
		<selectKey resultType="java.lang.Integer" keyProperty="aiId" order="AFTER" >
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into authorize_info
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="memberId != null" >
				member_id,
			</if>
			<if test="aliyAuthorizeTime != null" >
				aliy_authorize_time,
			</if>
			<if test="creditAuthorizeTime != null" >
				credit_authorize_time,
			</if>
			<if test="opertateAuthorizeTime != null" >
				opertate_authorize_time,
			</if>
			<if test="isAliyAuthorize != null" >
				is_aliy_authorize,
			</if>
			<if test="isOperateAuthorize != null" >
				is_operate_authorize,
			</if>
			<if test="isCreditAuthorize != null" >
				is_credit_authorize,
			</if>
			<if test="createdon != null" >
				createdon,
			</if>
			<if test="remark != null" >
				remark,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="memberId != null" >
				#{memberId,jdbcType=INTEGER},
			</if>
			<if test="aliyAuthorizeTime != null" >
				#{aliyAuthorizeTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creditAuthorizeTime != null" >
				#{creditAuthorizeTime,jdbcType=TIMESTAMP},
			</if>
			<if test="opertateAuthorizeTime != null" >
				#{opertateAuthorizeTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isAliyAuthorize != null" >
				#{isAliyAuthorize,jdbcType=TINYINT},
			</if>
			<if test="isOperateAuthorize != null" >
				#{isOperateAuthorize,jdbcType=TINYINT},
			</if>
			<if test="isCreditAuthorize != null" >
				#{isCreditAuthorize,jdbcType=TINYINT},
			</if>
			<if test="createdon != null" >
				#{createdon,jdbcType=TIMESTAMP},
			</if>
			<if test="remark != null" >
				#{remark,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<!-- 按主键更新 - 仅更新给定实体类中非null的字段 2017-04-20 16:50:02. -->
	<update id="updateByPrimaryKeySelective" parameterType="cn.houhe.api.loan.entity.AuthorizeInfo" >
		update authorize_info
		<set >
			<if test="memberId != null" >
				member_id = #{memberId,jdbcType=INTEGER},
			</if>
			<if test="aliyAuthorizeTime != null" >
				aliy_authorize_time = #{aliyAuthorizeTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creditAuthorizeTime != null" >
				credit_authorize_time = #{creditAuthorizeTime,jdbcType=TIMESTAMP},
			</if>
			<if test="opertateAuthorizeTime != null" >
				opertate_authorize_time = #{opertateAuthorizeTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isAliyAuthorize != null" >
				is_aliy_authorize = #{isAliyAuthorize,jdbcType=TINYINT},
			</if>
			<if test="isOperateAuthorize != null" >
				is_operate_authorize = #{isOperateAuthorize,jdbcType=TINYINT},
			</if>
			<if test="isCreditAuthorize != null" >
				is_credit_authorize = #{isCreditAuthorize,jdbcType=TINYINT},
			</if>
			<if test="createdon != null" >
				createdon = #{createdon,jdbcType=TIMESTAMP},
			</if>
			<if test="remark != null" >
				remark = #{remark,jdbcType=VARCHAR},
			</if>
		</set>
		where ai_id = #{aiId,jdbcType=INTEGER}
	</update>

	<!-- 按主键更新 - 全更新 2017-04-20 16:50:02. -->
	<update id="updateByPrimaryKey" parameterType="cn.houhe.api.loan.entity.AuthorizeInfo" >
		update authorize_info
		set member_id = #{memberId,jdbcType=INTEGER},
			aliy_authorize_time = #{aliyAuthorizeTime,jdbcType=TIMESTAMP},
			credit_authorize_time = #{creditAuthorizeTime,jdbcType=TIMESTAMP},
			opertate_authorize_time = #{opertateAuthorizeTime,jdbcType=TIMESTAMP},
			is_aliy_authorize = #{isAliyAuthorize,jdbcType=TINYINT},
			is_operate_authorize = #{isOperateAuthorize,jdbcType=TINYINT},
			is_credit_authorize = #{isCreditAuthorize,jdbcType=TINYINT},
			createdon = #{createdon,jdbcType=TIMESTAMP},
			remark = #{remark,jdbcType=VARCHAR}
		where ai_id = #{aiId,jdbcType=INTEGER}
	</update>

	<!-- 按 Criteria 条件查询, 支持分页 2017-04-20 16:50:02. -->
	<select id="selectByCriteria" resultMap="BaseResultMap" parameterType="Criteria" >
		select
		<include refid="Base_Column_List" />
		from authorize_info
		<where >
			<include refid="Criteria.Filter" />
		</where>
		<include refid="Criteria.Order" />
	</select>

</mapper>