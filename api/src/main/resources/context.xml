<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
    <context:property-placeholder location="classpath*:db.properties,classpath*:config.properties"/>
    <bean id="formulaYaml" class="org.springframework.beans.factory.config.YamlPropertiesFactoryBean">
        <property name="resources" value="classpath*:formula.yml"/>
    </bean>
    <context:component-scan base-package="cn.houhe">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    <!-- redis -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
    </bean>

    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}" />
        <property name="port" value="${redis.port}" />
        <property name="password" value="${redis.pwd}" />
        <property name="poolConfig" ref="jedisPoolConfig" />
        <property name="usePool" value="true" />
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
    </bean>

    <!-- 将session放入redis -->
    <bean id="redisHttpSessionConfiguration"
          class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <property name="maxInactiveIntervalInSeconds" value="1800" />
    </bean>
    <bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"/>

    <bean id="schedulerFactoryBean"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean" />

    <!-- 分数决策 -->
    <bean id="scoreDecision" class="cn.houhe.api.loan.service.score.ScoreDecision">
        <constructor-arg name="decisioners">
            <map>
                <entry key="bqs">
                    <bean class="cn.houhe.api.loan.service.score.BqsScoreDecisioner"/>
                </entry>
                <entry key="age">
                    <bean class="cn.houhe.api.loan.service.score.AgeScoreDecisioner"/>
                </entry>
                <entry key="auth">
                    <bean class="cn.houhe.api.loan.service.score.AuthoriseScoreDecisioner"/>
                </entry>
                <entry key="phone">
                    <bean class="cn.houhe.api.loan.service.score.PhoneScoreDecisioner"/>
                </entry>
                <entry key="br">
                    <bean class="cn.houhe.api.loan.service.score.BrScoreDecisioner"/>
                </entry>
                <entry key="insurance">
                    <bean class="cn.houhe.api.loan.service.score.InsuranceScoreDecisioner"/>
                </entry>
                <entry key="car">
                    <bean class="cn.houhe.api.loan.service.score.CarScoreDecisioner"/>
                </entry>
                <entry key="family">
                    <bean class="cn.houhe.api.loan.service.score.FamilyScoreDecisioner"/>
                </entry>
                <entry key="address">
                    <bean class="cn.houhe.api.loan.service.score.AddressScoreDecisioner"/>
                </entry>
                <entry key="house">
                    <bean class="cn.houhe.api.loan.service.score.HouseScoreDecisioner"/>
                </entry>
                <entry key="other">
                    <bean class="cn.houhe.api.loan.service.score.OtherScoreDescioner"/>
                </entry>
            </map>
        </constructor-arg>
    </bean>
</beans>